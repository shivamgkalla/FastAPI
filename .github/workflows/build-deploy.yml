name: Build and Deploy FastAPI TodoApp

on: ["push", "pull_request"]

jobs:
  job1:
    # env:
    #   DATABASE_URL: ${{secrets.DATABASE_URL}}
    #   SECRET_KEY: ${{secrets.SECRET_KEY}}
    #   ALGORITHM: ${{secrets.ALGORITHM}}
    #   ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: TodoApplicationDatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt

      # - name: Export secrets to environment
      #   run: |
      #     echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
      #     echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
      #     echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
      #     echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> $GITHUB_ENV

      - name: Run env scripts using secrets
        run: |
          echo "Using DATABASE_URL: $DATABASE_URL"
          echo "Using SECRET_KEY: $SECRET_KEY"
          echo "Using ALGORITHM: $ALGORITHM"
          echo "Using ACCESS_TOKEN_EXPIRE_MINUTES: $ACCESS_TOKEN_EXPIRE_MINUTES"
          

        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          ALGORITHM: ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}



      # - name: Export secrets to environment
      #   run: |
      #     echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV


      - name: Verify DATABASE_URL
        run: |
          echo "DATABASE_URL is: $DATABASE_URL"
          if [ -z "$DATABASE_URL" ]; then
            echo "::error::❌ DATABASE_URL is NOT set"
            exit 1
          else
            echo "✅ DATABASE_URL is set"
          fi



      - name: Test with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      
      # - name: Setup Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and Push
      #   id: docker_build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi-todoapp:latest
