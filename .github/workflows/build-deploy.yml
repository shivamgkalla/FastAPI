name: Build and Deploy FastAPI TodoApp

on: ["push", "pull_request"]

jobs:
  build:
    env:
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: TodoApplicationDatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt


      - name: Test with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      
      # - name: Setup Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and Push
      #   id: docker_build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi-todoapp:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2

      - name: Deploying to Render
        id: render_deploy
        uses: MrAmericanMike/trigger-render-deploy@m0.0.1
        with:
            render-service-id: ${{ secrets.RENDER_SERVICE_ID }}
            render-api-key: ${{ secrets.RENDER_API_KEY }}
            wait-for-success: true